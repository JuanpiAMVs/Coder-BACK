paths:
  /api/carts:
    get:
      summary: Devuelve el carrito de los usuarios.
      tags:
        - Cart
      responses:
        "200":
          description: Trae el carrito de todos los usuarios.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
  /api/carts/{cid}:
    delete:
      summary: Eliminar todos los productos de un carrito por CID
      tags:
        - Cart
      parameters:
        - in: path 
          name: cid  
          required: true
          description: CID del carrito a eliminar.
          schema:
            type: string
      responses:
        "200":
          description: Todos los productos del carrito han sido borrados
        "400":
          description: Carrito no encontrado
  /api/cart/{cid}/purchase:
    post:
      summary: Realiza la compra sobre los productos que tengan stock que estén dentro del carrito.
      tags:
        - Cart
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito del usuario.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Error interno del servidor.
components:
  schemas:
    Cart:
      type: object
      properties:
        products:
          type: array
          description: Array de productos referenciados de colección Products.
        quantity:
          type: number
        amount:
          type: number
        totalAmount:
          type: number
          description: Monto total del carrito de compras.
        totalQuantity:
          type: number
          description: Cantidad total de productos.
        status:
          type: string
        _id:
          type: string
          description: ID unico del producto, generado por MongoDB.